"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.jestOffline = void 0;
const LOCAL_HOSTS = ['localhost', '127.0.0.1'];
const detectLeaks = process.argv.some(a => a.includes('detectLeaks'));
/**
 * Based on: https://github.com/palmerj3/jest-offline/blob/master/index.js
 */
function jestOffline() {
    if (detectLeaks) {
        console.log('NOT applying jestOffline() when --detectLeaks is on');
        return;
    }
    console.log('jest offline mode');
    const createMitm = require('mitm');
    const mitm = createMitm();
    mitm.on('connect', (socket, opts) => {
        const { host } = opts;
        if (!LOCAL_HOSTS.includes(host)) {
            throw new Error(`Network request forbidden by jestOffline(): ${host}`);
        }
        socket.bypass();
    });
}
exports.jestOffline = jestOffline;
