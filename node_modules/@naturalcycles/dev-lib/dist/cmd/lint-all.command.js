"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.lintAllCommand = void 0;
const yargs = require("yargs");
const git_util_1 = require("../util/git.util");
const prettier_util_1 = require("../util/prettier.util");
const stylelint_util_1 = require("../util/stylelint.util");
const eslint_all_command_1 = require("./eslint-all.command");
/**
 * We run eslint BEFORE Prettier, because eslint can delete e.g unused imports.
 */
async function lintAllCommand() {
    const { commitOnChanges, failOnChanges } = yargs.options({
        commitOnChanges: {
            type: 'boolean',
            default: false,
        },
        failOnChanges: {
            type: 'boolean',
            default: false,
        },
    }).argv;
    const hadChangesBefore = await (0, git_util_1.gitHasUncommittedChanges)();
    // Currently we position ESLint before TSLint, but let's monitor if it's ok
    await (0, eslint_all_command_1.eslintAllCommand)();
    await (0, stylelint_util_1.stylelintAll)();
    await (0, prettier_util_1.runPrettier)();
    if (commitOnChanges || failOnChanges) {
        // detect changes
        const hasChanges = await (0, git_util_1.gitHasUncommittedChanges)();
        if (hasChanges) {
            if (hadChangesBefore) {
                console.log(`lint-all: there are changes before running lint-all, will not commit`);
            }
            else {
                const msg = 'style(lint-all): ' +
                    (0, git_util_1.commitMessageToTitleMessage)(await (0, git_util_1.getLastGitCommitMsg)()) +
                    '\n\n[skip ci]';
                // pull, commit, push changes
                await (0, git_util_1.gitPull)();
                await (0, git_util_1.gitCommitAll)(msg);
                await (0, git_util_1.gitPush)();
            }
            // fail on changes
            if (failOnChanges) {
                console.log('lint-all failOnChanges: exiting with status 1');
                process.exitCode = 1;
            }
        }
    }
}
exports.lintAllCommand = lintAllCommand;
