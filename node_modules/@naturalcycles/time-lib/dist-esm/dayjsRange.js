import { dayjs } from './index';
/**
 * Like _range, but for IDayjs.
 * Left side is inclusive.
 * Right side of the range is exclusive. (same as _range)
 */
export function dayjsRange(minIncl, maxExcl, step = 1, stepUnit = 'd') {
    const days = [];
    let current = dayjs(minIncl).startOf(stepUnit);
    const max = dayjs(maxExcl).startOf(stepUnit);
    do {
        days.push(current);
        current = current.add(step, stepUnit);
    } while (current.isBefore(max));
    return days;
}
export function dayjsRangeISODate(minIncl, maxExcl, step = 1, stepUnit = 'd') {
    return dayjsRange(minIncl, maxExcl, step, stepUnit).map(d => d.toISODate());
}
/**
 * Like _range, but for IDayjs.
 * Both sides inclusive.
 */
export function dayjsRangeIncl(minIncl, maxIncl, step = 1, stepUnit = 'd') {
    return dayjsRange(minIncl, dayjs(maxIncl).add(1, stepUnit), step, stepUnit);
}
export function dayjsRangeInclISODate(minIncl, maxIncl, step = 1, stepUnit = 'd') {
    return dayjsRangeIncl(minIncl, maxIncl, step, stepUnit).map(d => d.toISODate());
}
