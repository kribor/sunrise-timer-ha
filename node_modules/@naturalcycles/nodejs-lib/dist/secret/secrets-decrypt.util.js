"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.secretsDecrypt = void 0;
const path = require("path");
const fs = require("fs-extra");
const globby = require("globby");
const colors_1 = require("../colors");
const crypto_util_1 = require("../security/crypto.util");
/**
 * Decrypts all files in given directory (*.enc), saves decrypted versions without ending `.enc`.
 * Using provided encKey.
 */
function secretsDecrypt(dir, encKey, algorithm, del) {
    const patterns = dir.map(d => `${d}/**/*.enc`);
    const filenames = globby.sync(patterns);
    filenames.forEach(filename => {
        const enc = fs.readFileSync(filename);
        const plain = (0, crypto_util_1.decryptRandomIVBuffer)(enc, encKey, algorithm);
        const plainFilename = filename.slice(0, filename.length - '.enc'.length);
        fs.writeFileSync(plainFilename, plain);
        if (del) {
            fs.unlinkSync(filename);
        }
        console.log(`  ${path.basename(filename)} > ${path.basename(plainFilename)}`);
    });
    console.log(`decrypted ${(0, colors_1.yellow)(filenames.length)} files in ${(0, colors_1.dimGrey)(dir.join(' '))}`);
}
exports.secretsDecrypt = secretsDecrypt;
