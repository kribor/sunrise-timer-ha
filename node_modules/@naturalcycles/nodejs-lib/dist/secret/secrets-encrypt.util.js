"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.secretsEncrypt = void 0;
const path = require("path");
const fs = require("fs-extra");
const globby = require("globby");
const colors_1 = require("../colors");
const crypto_util_1 = require("../security/crypto.util");
/**
 * Encrypts all files in given directory (except *.enc), saves encrypted versions as filename.ext.enc.
 * Using provided encKey.
 */
function secretsEncrypt(pattern, encKey, algorithm, del) {
    const patterns = [
        ...pattern,
        `!**/*.enc`, // excluding already encoded
    ];
    const filenames = globby.sync(patterns);
    filenames.forEach(filename => {
        const plain = fs.readFileSync(filename);
        const enc = (0, crypto_util_1.encryptRandomIVBuffer)(plain, encKey, algorithm);
        const encFilename = `${filename}.enc`;
        fs.writeFileSync(encFilename, enc);
        if (del) {
            fs.unlinkSync(filename);
        }
        console.log(`  ${path.basename(filename)} > ${path.basename(encFilename)}`);
    });
    console.log(`encrypted ${(0, colors_1.yellow)(filenames.length)} files in (${(0, colors_1.dimGrey)(pattern.join(' '))})`);
}
exports.secretsEncrypt = secretsEncrypt;
