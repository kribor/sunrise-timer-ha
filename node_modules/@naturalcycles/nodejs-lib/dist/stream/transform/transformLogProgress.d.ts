import { AnyObject } from '@naturalcycles/js-lib';
import { TransformOptions, TransformTyped } from '../stream.model';
export interface TransformLogProgressOptions<IN = any> extends TransformOptions {
    /**
     * Progress metric
     *
     * @default `progress`
     */
    metric?: string;
    /**
     * Include `heapUsed` in log.
     *
     * @default false
     */
    heapUsed?: boolean;
    /**
     * Include `heapTotal` in log.
     *
     * @default false
     */
    heapTotal?: boolean;
    /**
     * Include `rss` in log.
     *
     * @default true
     */
    rss?: boolean;
    /**
     * Incude Peak RSS in log.
     *
     * @default true
     */
    peakRSS?: boolean;
    /**
     * Include `external` in log.
     *
     * @default false
     */
    external?: boolean;
    /**
     * Include `arrayBuffers` in log.
     *
     * @default false
     */
    arrayBuffers?: boolean;
    /**
     * Log (rss - heapTotal)
     * For convenience of debugging "out-of-heap" memory size.
     *
     * @default false
     */
    rssMinusHeap?: boolean;
    /**
     * Log "rows per second"
     *
     * @default true
     */
    logRPS?: boolean;
    /**
     * Set to false to disable logging progress
     *
     * @default true
     */
    logProgress?: boolean;
    /**
     * Log progress event Nth record that is _processed_ (went through mapper).
     * Set to 0 to disable logging.
     *
     * @default 1000
     */
    logEvery?: number;
    /**
     * Function to return extra properties to the "progress object".
     *
     * chunk is undefined for "final" stats, otherwise is defined.
     */
    extra?: (chunk: IN | undefined, index: number) => AnyObject;
    /**
     * If specified - will multiply the counter by this number.
     * Useful e.g when using `transformBuffer({ batchSize: 500 })`, so
     * it'll accurately represent the number of processed entries (not batches).
     *
     * Defaults to 1.
     */
    batchSize?: number;
}
/**
 * Pass-through transform that optionally logs progress.
 */
export declare function transformLogProgress<IN = any>(opt?: TransformLogProgressOptions): TransformTyped<IN, IN>;
