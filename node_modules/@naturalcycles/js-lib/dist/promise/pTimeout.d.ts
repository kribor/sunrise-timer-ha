import { AnyFunction } from '../types';
export interface PTimeoutOptions {
    /**
     * Timeout in milliseconds.
     */
    timeout: number;
    /**
     * If set - will be included in the error message.
     * Can be used to identify the place in the code that failed.
     */
    name?: string;
    /**
     * If provided - will be called INSTEAD of throwing an error.
     * Can be used to thrown a custom error OR resolve a promise without throwing.
     */
    onTimeout?: () => any;
}
/**
 * Decorates a Function with a timeout.
 * Throws an Error if the Function is not resolved in a certain time.
 * If the Function rejects - passes this rejection further.
 */
export declare function pTimeout<T extends AnyFunction>(fn: T, opt: PTimeoutOptions): T;
