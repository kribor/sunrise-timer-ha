"use strict";
// from: https://github.com/lodash/lodash/blob/master/words.js
Object.defineProperty(exports, "__esModule", { value: true });
exports.words = void 0;
/* eslint-disable */
const unicodeWords_1 = require("./unicodeWords");
const hasUnicodeWord = RegExp.prototype.test.bind(/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/);
/** Used to match words composed of alphanumeric characters. */
const reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function asciiWords(s) {
    return s.match(reAsciiWord);
}
/**
 * Splits `string` into an array of its words.
 *
 * @param [s=''] The string to inspect.
 * @param [pattern] The pattern to match words.
 * @returns Returns the words of `string`.
 * @example
 *
 * words('fred, barney, & pebbles')
 * // => ['fred', 'barney', 'pebbles']
 *
 * words('fred, barney, & pebbles', /[^, ]+/g)
 * // => ['fred', 'barney', '&', 'pebbles']
 */
function words(s, pattern) {
    if (pattern === undefined) {
        const result = hasUnicodeWord(s) ? (0, unicodeWords_1.unicodeWords)(s) : asciiWords(s);
        return result || [];
    }
    return s.match(pattern) || [];
}
exports.words = words;
