"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppError = void 0;
/**
 * Base class for all our (not system) errors.
 *
 * message - "technical" message. Frontend decides to show it or not.
 * data - optional "any" payload.
 * data.userMessage - if present, will be displayed to the User as is.
 *
 * Based on: https://medium.com/@xpl/javascript-deriving-from-error-properly-8d2f8f315801
 */
class AppError extends Error {
    constructor(message, data = {}) {
        super(message);
        Object.defineProperty(this, 'name', {
            value: this.constructor.name,
            configurable: true,
        });
        Object.defineProperty(this, 'data', {
            value: data,
            writable: true,
            configurable: true,
            enumerable: false,
        });
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
        }
        else {
            Object.defineProperty(this, 'stack', {
                value: new Error().stack,
                writable: true,
                configurable: true,
            });
        }
    }
}
exports.AppError = AppError;
